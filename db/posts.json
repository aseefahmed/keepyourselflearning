{"_id":{"$oid":"5aec8be7b036d848b65a0c27"},"title":"DevOps Job Responsibilities \u0026 Qualifications","category":["devops"],"short_description":"In traditional Software Development Lifecycle (SDLC), it takes time to deploy the software to the end users and it involves lots of human interaction to migrate the software from development environment production. As a result of that human interaction in deployment process, lots of disaster happened in production environment. ","description":"\u003cp style=\"text-align:justify\"\u003eIn traditional Software Development Lifecycle (SDLC), it takes time to deploy the software to the end users and it involves lots of human interaction to migrate the software from development environment to production. As a result of that human interactions in deployment process, lots of disaster happened in production environment. Hence, DevOps comes to ease the process of software development. Most of the companies are moving from traditional software development practice into DevOps culture. In this article, I highlited the key roles and qualifications, a DevOps Engineer must have to acomplish his/her day-to-day DevOps activities. This article will help those IT professionals who are planning to switch their career path into DevOps and for those IT firms that are planning to adopt DevOps principals within ther organisation:\u0026nbsp;\u0026nbsp;\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003e\u003cstrong\u003eScripting Language\u003c/strong\u003e:\u0026nbsp;Development in at least one of scripting languages such as Unix shells or Python\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003e\u003cstrong\u003eCI/CD Tools\u003c/strong\u003e: Experience in software build environments such as Jenkins, Maven, Gradle\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003e\u003cstrong\u003eCloud\u003c/strong\u003e: Deep understanding and experience on AWS or a particular cloud hosting services and architecture\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003e\u003cstrong\u003eVersion Control System\u003c/strong\u003e: Experience in version control system (preferably Git)\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003e\u003cstrong\u003eConfiguration Management Tools\u003c/strong\u003e: Experience in configuration management tools such as Chef, Anisible or Puppets\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003e\u003cstrong\u003eContainer Management System\u003c/strong\u003e: Solid knowledge on Docker is must.\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003e\u003cstrong\u003eMonitoring Tools\u003c/strong\u003e: Experience with system monitoring tools (e.g. Nagios), AWS CloudWatch etc.\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003e\u003cstrong\u003eOperating System\u003c/strong\u003e: Administration of various flavors of Linux machines\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003e\u003cstrong\u003eProblem Solving\u003c/strong\u003e: Ability to analyze and resolve complex infrastructure resource and application deployment issues.\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eDesire to learn new DevOps Tools \u0026amp; Technologies\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eSuggesting architecture improvements, recommending process improvements\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eSystem troubleshooting and problem solving across platform and application domains\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eMust\u0026nbsp;be\u0026nbsp;proactive, resourceful and self-motivated with strong analytical skills.\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eExcellent communication and interpersonal skills is mandatory.\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eExperience applying Scrum and Agile methodologies.\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eGood understanding of CI/CD processes and concepts\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eExcellent troubshooting skill is mendatory\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eShould be able to configure load balancer and auto-scaling of servers\u003c/li\u003e\r\n\u0009\u003cli style=\"text-align:justify\"\u003eLeading and guiding junior developers on TDD, deployment and modern development practices\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eThat\u0026#39;s all a DevOps Engineer has to go through in his/her daily operation. If i miss something or if you went through some challenges as a DevOps Engineer or automating your infrastructure, then let us know in the comment section bellow. Your participation will be highly appreciated.\u0026nbsp;\u003c/p\u003e\r\n","tags":["jenkins","git","chef","ansible","puppet","linux","python","aws","cloud","nagios","scripting languages","automation"],"image":"9230559960adbcf972ffca5789f77fcb","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-04T16:35:51.357Z"},"updated_at":{"$date":"2018-05-16T09:06:48.627Z"},"no_of_views":1430,"comments":[],"external_link":"","external_author":""}
{"_id":{"$oid":"5aedd613541f9d6b03cfe746"},"title":"Jenkins is not able to restart NodeJS server","category":["troubleshooting"],"short_description":"I want to runt my NodeJS application on port 80 instead of other ports.  But Jenkins is not able to restart the NodeJS server by running \"pm2 -f restart index.js' command during build stage.  I  tried to run this command via sudo from jenkins shell in build stage, but its still not working. How to solve this issue, so that my NodeJS application is running on port 80.","description":"\u003cp\u003e\u003cstrong\u003eSolutions:\u003c/strong\u003e\u003c/p\u003e\r\n\r\n\u003cp\u003eFirst of all, if you want to run any application on port less then 1024, you need to have root access. Giving root access to other users like Jenkins will be a security breach. So, its better not to use any port bellow 1024 such as port 80 for your application. Rather run on other ports like 8080 and redirect port 80 into that port (in case port 3000) by running the following command:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003esudo iptables -A PREROUTING -t nat -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eTo make this persistent, type the following command:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003esudo apt-get install iptables-persistent\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":["jenkins","nodejs","server"],"image":"999cc0c51f97306c1ab2fa9adc5c8b9c","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-05T16:04:35.865Z"},"updated_at":{"$date":"2018-05-16T09:21:51.814Z"},"no_of_views":32,"external_link":"","external_author":""}
{"_id":{"$oid":"5aeea597b918e82f755e29d3"},"title":"\"git push\" is still asking for username and password","category":["troubleshooting"],"short_description":"Getting Fatal: HttpRequestException while i am trying to push my code into github and just after that i have be asking for my github username and password even though I have setup my SSH key in my GitHub account.","description":"\u003cp style=\"text-align:justify\"\u003eIf you encounter this issue from Windows machine, then this\u0026nbsp;HttpRequestException exception will araise and your ssh key will not work. This is because GitHub disabled weak ecryption. To solve this problem, you can use \u003ca href=\"https://github.com/Microsoft/Git-Credential-Manager-for-Windows/releases/tag/v1.15.2\" target=\"_blank\"\u003eGit Credential Manager\u003c/a\u003e for Window. I hope it will work\u003c/p\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\" style=\"text-align:justify\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":["git","ssh","github","nodejs"],"image":"327b08cdbba419909c620d5d17921d9d","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-06T06:49:59.199Z"},"updated_at":{"$date":"2018-05-16T09:20:58.972Z"},"no_of_views":18,"external_link":"","external_author":""}
{"_id":{"$oid":"5aef05ef9f5bc44f639c3f4f"},"title":"What is Proper Continuous Integration?","category":["devops"],"short_description":"Continuous integration (CI) is confusing. As with all ideas, everybody does their own version of it in practice.","external_link":"https://medium.com/@lukastosic/continuous-integration-workflow-91fd83b8d69a","description":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\r\n","tags":[""],"image":"859d231543c4b4064e28a1b2e8335cfb","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-06T13:41:03.800Z"},"updated_at":{"$date":"2018-05-10T07:54:41.506Z"},"no_of_views":7,"external_author":"Luka Stosic"}
{"_id":{"$oid":"5aefdefe731a193d39428958"},"title":"Dockerizing A NodeJs Application","category":["tutorials","docker","nodejs"],"short_description":"In this tutorial, you will be given a demo of dockerizing a NodeJs application in details.","external_link":"https://semaphoreci.com/community/tutorials/dockerizing-a-node-js-web-application","description":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":[""],"image":"f5b4d38a6b1abba2546b9c24856a2b62","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-07T05:07:10.212Z"},"updated_at":{"$date":"2018-05-10T07:55:00.038Z"},"no_of_views":2,"external_author":"Mark Thomas"}
{"_id":{"$oid":"5af13cbeee499420a1e04ca4"},"title":"Accessing remote Linux server from local machine ","category":["tutorials","linux"],"short_description":"If you want to be a DevOps engineer, at some point in your career, you have to log into remotely located Linux server from your work station using a very powerful communication tool called SSH.","external_link":"","description":"\u003cp\u003eAccessing remote server is extremely crucial for every DevOps engineers or System Administrators to understand. First of all, the question you might ask \u0026quot;Why I need to access a remote server?\u0026quot;. Well, you need to access a remote server a number of reasons. Some of the reasons to access a remote servers are illustrated bellow:\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eYou need to access a remote server to host your web application into that server. You need to configure that server such as installing apache server and database server so that your web application runs without having any trouble.\u003c/li\u003e\r\n\u0009\u003cli\u003eYou may want to access a remote server if you want to copy some files from your work station to a remotely located server.\u003c/li\u003e\r\n\u0009\u003cli\u003eIf you want to pull your latest code from your remote git repository into a production server, you need to access to that server as well.\u0026nbsp;\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003eSo there are many reasons you have to access into a remote linux server in almost every day as a part of your DevOps activities or System Administration. Here I am illustrated the steps you have to follow to access a remote server. To access a remote server you need to have the IP address or host name of that remote server. You also need a username of one of the user created on that server.\u0026nbsp;\u0026nbsp;Without this information, you will not be able to access that server. Let say, the server I want to access has the following IP address:\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003e54.205.202.121\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eand I want to access that server with the username of\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003euser\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eTo access into that server, you need to use a popular Linux command which is\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003essh\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eso altogether, in the command prompt, you have to type the following command:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-http\"\u003e#ssh username@ip_address\r\nssh john@54.205.202.121\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eif you log into that server\u0026nbsp;for the first time, as soon as you press enter after typing the above command, you will be displayed the bellow message in the screen and asked to type \u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003eyes/no\u003c/strong\u003e\u003c/span\u003e.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003eThe authenticity of host '54.205.202.121 (54.205.202.121)' can't be established.\r\nECDSA key fingerprint is SHA256:Sh5ax5mN3cu8H3XPP7z783SBW2bFRN5+N+7GV218N2k.\r\nAre you sure you want to continue connecting (yes/no)?\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eThis is a message to get get confirmation from you whether you really want to access into that server. You will never get this message again if you try access the the server again. After typing \u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eyes\u003c/span\u003e\u003c/strong\u003e, you will prompted for the password of \u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003ejohn \u003c/span\u003e\u003c/strong\u003elike this\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003ejohn@54.205.202.121's password:\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eJust type the password of john correcly\u0026nbsp; and then press enter. Boom, you accessed into that remote server and your screen will be look like this:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003ejohn@ubuntu_server:~#\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eDon\u0026#39;t worry about\u0026nbsp;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eubuntu_server\u0026nbsp;\u003c/span\u003e\u003c/strong\u003eafter the \u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003e@\u003c/span\u003e\u003c/strong\u003e symbol. Its just the name of that server. The problem with this technique, every time you want to access into this server, you have to provide a valid username and password. Without this, you can\u0026#39;t proceed further. Providing username password all the time is a headache. So there is and easier and much secure\u0026nbsp;solution. And that is using \u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003eSSH(Secure Shell)\u003c/strong\u003e\u003c/span\u003e\u0026nbsp;protocol.\u0026nbsp;SSH is a protocol that allow administrators a much easier and secure way to access a remote server. Almost every linux server has SSH out of the box. The concept of SSH comunication is that you have to generate two keys. One is public key and another one is private key. You keep the private key in your workstation and you have to put the private key in the remote server where you want to access.\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cp\u003eSo how to generate these two keys? From your Linux machine, type the following command:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003essh-keygen\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eAs soon as you type the command, you will get the following message in the screen:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003eGenerating public/private rsa key pair.\r\nEnter file in which to save the key (/root/.ssh/id_rsa):\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eIt just asking you to type the name of file where you want to save your key. You can give any name you like or you can leave it empty and then press enter. As soon as you press enter, you will get another message like this:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003eEnter passphrase (empty for no passphrase):\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eIn the above promt, you have to password to protect that file or you can leave it blank. Then press enter and you will see something like this:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003eThe key fingerprint is:\r\nSHA256:jertoAiv+BAiH2THF+SR0hmQEpJmYUQZDXdyXwfZcZs root@ubuntu-s-1vcpu-1gb-lon1-01\r\nThe key's randomart image is:\r\n+---[RSA 2048]----+\r\n|+OB+.B=+ o+o..   |\r\n|o=oo*.=o..... o  |\r\n|o o.o.o.     E   |\r\n| o . .   o       |\r\n|+ .     S .      |\r\n|oo .   .         |\r\n|o .   o          |\r\n|.+ . o o         |\r\n|oo+ . ..o        |\r\n+----[SHA256]-----+\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eThat means you keys(public and private) are generated. But where they are saved. There will be a folder created(if its not exist) under the home directory called \u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003e.ssh\u003c/span\u003e\u003c/strong\u003e which will be hidden file by nature. lets go to that directory:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003ecd ~/.ssh/\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eWhile you are in this directory, you check the files available inside this directory by \u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003els\u003c/strong\u003e\u003c/span\u003e\u0026nbsp;command:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003eroot@ubuntu-s-1vcpu-1gb-lon1-01:~/.ssh# ls\r\nauthorized_keys  id_rsa  id_rsa.pub\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eso two file are generated via that \u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003essh-keygen\u003c/strong\u003e\u003c/span\u003e\u0026nbsp;command. One is id_rsa(private key) and another one is id_rsa.pub(public key). You need this two key to access a remote server securely and easily. What you have to do you need to keep a copy of your public key(id_rsa.pub is our case) to the remote server where you need to access frequently. But how can you do that. Well there is another command which will help you to copy that public key from your workstation into the remote server and that command is \u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003essh-copy-id\u0026nbsp;\u003c/strong\u003e\u003c/span\u003eas bellow where root is the username of that user you want to access as and\u0026nbsp;139.59.170.48 is the IP address of that remote server\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003essh-copy-id john@54.205.202.121\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eAs soon as you press enter, you will be asked for the password of the user(root in this case). Then press enter and if everything goes fine, the you will be seen the final message as bellow:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003eNumber of key(s) added: 1\r\n\r\nNow try logging into the machine, with:   \"ssh 'john@54.205.202.121'\"\r\nand check to make sure that only the key(s) you wanted were added.\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eIf you see this message, that means now you can access that remote server securely and without providng any password.\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":["ssh","linux","devops","web developer"],"image":"804edb75262ff70cef0dd946bcc8ec67","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-08T05:59:26.442Z"},"updated_at":{"$date":"2018-05-16T09:23:14.516Z"},"no_of_views":70,"external_author":""}
{"_id":{"$oid":"5af3e01849df9254ffd6092d"},"title":"Could not open a connection to your authentication agent","category":["troubleshooting","linux"],"short_description":"While trying to add my ssh key using ssh-add command i get an error of \"Could not open a connection to your authentication agent.\"","external_link":"","description":"\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003eCould not open a connection to your authentication agent.\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eIn the command prompt from my linux machine, while adding the\u0026nbsp; key to the ssh agent via ssh-add command if you get the above error, then run the following command and try again.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003eeval `ssh-agent -s`\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":["ssh","linux"],"image":"61bbf4221f150f7da86106e290d4789d","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-10T06:00:56.757Z"},"updated_at":{"$date":"2018-05-10T06:00:56.757Z"},"no_of_views":13}
{"_id":{"$oid":"5af3ec9f49df9254ffd6092e"},"title":"What We Need to Learn To Become a Professional Web Developer","category":["career","web development"],"short_description":"Many undergraduate students asked me a lot: \"what I have to learn to get a job as a Web Developer.\" ","external_link":"","description":"\u003cp\u003eMany undergraduate students\u0026nbsp;asked me a lot:\u0026nbsp;\u0026quot;what I have to learn to get a job as a Web Developer.\u0026quot; Well, to get a job as a web developer, that list\u0026nbsp;is not big enough, but if you want to sustain and grow in this industry, you have to learn a lots of\u0026nbsp;languages, frameworks, technologies and tools.\u0026nbsp;You also need to have some vendor certifications to show off your skills to your employers and get higher salary. Here, i enlisted those technologies that you need to learn in somewhere of your career.\u0026nbsp;Let me know, if i skipped anything else:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eProgramming Languages\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eHTML\u003c/li\u003e\r\n\u0009\u003cli\u003eCSS\u003c/li\u003e\r\n\u0009\u003cli\u003eJS\u003c/li\u003e\r\n\u0009\u003cli\u003ePHP/RubyOnRails/ASP.NET/Python\u003c/li\u003e\r\n\u0009\u003cli\u003eShell Programming\u003c/li\u003e\r\n\u0009\u003cli\u003eNodeJS\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eWeb Developemnt Frameworks:\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eLarave/CakePHP/Zend/CodeIgniter/Symphoney/Yii (PHP)\u003c/li\u003e\r\n\u0009\u003cli\u003eJQuery, AngularJS, ReactJs, VueJs, GulpJS\u0026nbsp;(JavaScript)\u003c/li\u003e\r\n\u0009\u003cli\u003eRuby on Rails (Ruby)\u003c/li\u003e\r\n\u0009\u003cli\u003eDjango (Pythong)\u003c/li\u003e\r\n\u0009\u003cli\u003eSpring (java)\u003c/li\u003e\r\n\u0009\u003cli\u003eASP.NET MVC5 (C#)\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eVersion Control\u0026nbsp;System\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eGit\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eDatabases\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eMySQL\u003c/li\u003e\r\n\u0009\u003cli\u003eMongoDB\u003c/li\u003e\r\n\u0009\u003cli\u003eSQL Server\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eThird Party API\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eAmazon\u003c/li\u003e\r\n\u0009\u003cli\u003eGoogle\u003c/li\u003e\r\n\u0009\u003cli\u003ePaypal\u003c/li\u003e\r\n\u0009\u003cli\u003eFacebook\u003c/li\u003e\r\n\u0009\u003cli\u003eTwitter\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eOperating System\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eLinux\u003c/li\u003e\r\n\u0009\u003cli\u003eMac OS\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eProject Management Tools\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eJira\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eGoogle\u0026nbsp;Tools\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eGoogle Webmaster Tool\u003c/li\u003e\r\n\u0009\u003cli\u003eGoogle Analytic Tool\u003c/li\u003e\r\n\u0009\u003cli\u003eGoogle Drive\u003c/li\u003e\r\n\u0009\u003cli\u003eGoogle Sheet\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eDatabases\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eMySQL\u003c/li\u003e\r\n\u0009\u003cli\u003eMongoDB\u003c/li\u003e\r\n\u0009\u003cli\u003eMS SQL Server\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eMicrosoft Office\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eMS Excel\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eDevOps Tools\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eChef\u003c/li\u003e\r\n\u0009\u003cli\u003eJenkins\u003c/li\u003e\r\n\u0009\u003cli\u003ePuppet\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e\u003cu\u003eVendor Certification\u003c/u\u003e\u003c/p\u003e\r\n\r\n\u003cul\u003e\r\n\u0009\u003cli\u003eZend Certified PHP Engineer (ZCPE)\u003c/li\u003e\r\n\u0009\u003cli\u003eMicrosoft Certified Solution Developer (MCSD)\u003c/li\u003e\r\n\u0009\u003cli\u003eRed Hat Certified Engineer (RHCE)\u003c/li\u003e\r\n\u0009\u003cli\u003eAWS Certified Solution Architecht (Amazon)\u003c/li\u003e\r\n\u0009\u003cli\u003eProject Management Professional (PMP)\u003c/li\u003e\r\n\u003c/ul\u003e\r\n\r\n\u003cp\u003e[This is a never ending list. I will keep updated this list as soon as i get informed regarding new tool, technologies and frameworks. so bookmark this page for future reference]\u003c/p\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":["linux","sql","php","mysql","git","html","css","javascript","jquery","ruby"],"image":"fd753d8faaf5283d350c9310dc79f8a4","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-10T06:54:23.345Z"},"updated_at":{"$date":"2018-05-10T07:36:55.864Z"},"no_of_views":11}
{"_id":{"$oid":"5af46fc82528c37cd3f9a776"},"title":"Frequently Used Ansible Modules","category":["devops","ansible"],"short_description":"Ansible shipped with tons of modules for the orchestration. However its really difficult to remember them all.","external_link":"","external_author":"","description":"\u003cp\u003eFor configuration management, Ansible is widely used by the DevOps engineers. This DevOps tools has a number of features available to make the automation. it comes with tons of modules out of the box. Here I have tried to enlisted few widely used modules in Ansible for configuration management:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003esetup Module\r\nfile Module\r\ncopy Module\r\nyum Module\r\napt Module\r\nservice Module\r\ncommand Module\r\nuser Module\r\nlineinfile module\r\nget_url module\r\nunarchive module\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\r\n","tags":["linux","shell"],"image":"10044fc342d1487ad81c5ba76da8da85","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-10T16:14:00.785Z"},"updated_at":{"$date":"2018-05-11T04:53:11.479Z"},"no_of_views":27}
{"_id":{"$oid":"5af6deb42528c37cd3f9a777"},"title":"Ansible Playbook To Deal With EC2 Instances","category":["devops","ansible"],"short_description":"Ansible has a significant numebrs of modules for different purposes. Here I am going to focus ec2  module for automating AWS EC2 instances. ","external_link":"","external_author":"","description":"\u003cp\u003eHere is the playbook(ec2_ubuntu.yml) to launch an ubuntu ami into us-east-1 region with public IP address\u0026nbsp;:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[ec2_ubuntu.yml]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-yaml\"\u003e---\r\n- hosts: localhost\r\n  tasks:\r\n   - name: Getting current timestamp\r\n     shell: \"date +%s\" #Shell module to execute shell command\r\n     register: current_time #Storing the output of previous shell command into a variable called current_time\r\n   - name: create instances\r\n     ec2:\r\n        key_name: 121212 #key name of the assigned key to the instance\r\n        region: us-east-1 #Region where the instance will be provissioned\r\n        instance_type: t2.micro #Instance type\r\n        image: ami-43a15f3e #AMI ID\r\n        count: 1 #Number of instances to be provissioned\r\n        vpc_subnet_id: subnet-dbc442bf #Subnets where the instance will be provissioned\r\n        assign_public_ip: yes #Public IP will be assigned to that Instance\r\n        instance_tags: #Assigning a name to this instance with the timestamp stored in current_time variable.\r\n          \"Name\": \"{{ current_time.stdout[0:10] }}\"\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eThen from the console, type the following command to execute that playbook:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-bash\"\u003eansible-playbook ec2_ubuntu.yml\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eHowever, its always a best practice to check that playbook before actually executing it by typing the following command from the console:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-scheme\"\u003eansible-playbook playbooks/ec2_ubuntu.yml --check\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cp\u003eTo install jenkins in this server via Ansible, \u003ca href=\"/post/get/5af7c7d247e38b1fa9939282\" target=\"_blank\"\u003eclick here\u003c/a\u003e to follow the steps written in another article.\u003c/p\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":["linux","aws","ansible  playbook","vpc","cloud"],"image":"1542d12542d173b46c9c2e42eb3ccbf3","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-12T12:31:48.840Z"},"updated_at":{"$date":"2018-05-13T05:09:51.375Z"},"no_of_views":38}
{"_id":{"$oid":"5af7288f2528c37cd3f9a778"},"title":"How To Continously Deliverying Laravel Application on Heroku","category":["devops","web development"],"short_description":"Heroku is a popular cloud based hosting provider to build and run any kind of web applications.  Here is a tutoral for Laravel application to deploy continuously with Heroku.","external_link":"https://semaphoreci.com/community/tutorials/continuous-delivery-of-laravel-applications-to-heroku","external_author":"Christopher Vundi","description":"\u003cp\u003e\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":["heroku","cloud","continuous integration"],"image":"6e5227971e6b0facb98df985c9d30b80","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-12T17:46:55.427Z"},"updated_at":{"$date":"2018-05-12T17:52:58.912Z"},"no_of_views":10}
{"_id":{"$oid":"5af7c7d247e38b1fa9939282"},"title":"Automating Jenkins Installation  with Ansible","category":["devops","ansible"],"short_description":"Installing Jenkins in multiple machine is  a repetitive task. So Ansible is there to make the process automated without any human interactions.","external_link":"","external_author":"","description":"\u003cp\u003e11111First provission an ubuntu server from AWS or any other cloud or private server. To create ubuntu server in AWS with Ansible, you \u003ca href=\"/post/get/5af6deb42528c37cd3f9a777\" target=\"_blank\"\u003ecan click\u003c/a\u003e here to read the steps mentioned in my another ariticle.To create a jenkins server on dedicated host, first modify the inventory file to mention your targeted machines:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[/etc/ansible/hosts]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-bash\"\u003e[jenkins_servers]\r\njenkins_server ansible_user=ubuntu ansible_host=18.204.243.43\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eCreate a playbook(jenkins_server.yml) with following lines\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[jenkins_server.yml]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-yaml\"\u003e---\r\n - hosts: jenkins_servers\r\n   roles:\r\n     - java\r\n     - jenkins\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eThen create two roles with following command:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-bash\"\u003eansible-galaxy init roles/java\r\nansible-galaxy init roles/jenkins\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eThe overall directory structure of my plabooks and roles are look like this:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-bash\"\u003e├── jenkins_server.yml\r\n└── roles\r\n    ├── java\r\n    │   ├── defaults\r\n    │   │   └── main.yml\r\n    │   ├── files\r\n    │   ├── handlers\r\n    │   │   └── main.yml\r\n    │   ├── meta\r\n    │   │   └── main.yml\r\n    │   ├── README.md\r\n    │   ├── tasks\r\n    │   │   └── main.yml\r\n    │   ├── templates\r\n    │   ├── tests\r\n    │   │   ├── inventory\r\n    │   │   └── test.yml\r\n    │   └── vars\r\n    │       └── main.yml\r\n    └── jenkins\r\n        ├── defaults\r\n        │   └── main.yml\r\n        ├── files\r\n        ├── handlers\r\n        │   └── main.yml\r\n        ├── meta\r\n        │   └── main.yml\r\n        ├── README.md\r\n        ├── tasks\r\n        │   └── main.yml\r\n        ├── templates\r\n        ├── tests\r\n        │   ├── inventory\r\n        │   └── test.yml\r\n        └── vars\r\n            └── main.yml\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eEdit the task file (roles/java/tasks/main.yml) for java role:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[roles/java/tasks/main.yml]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-yaml\"\u003e---\r\n# tasks file for roles/java\r\n- name: Installing Java\r\n  apt: name=default-jdk state=present update_cache=yes\r\n  become: yes\r\n  become_method: sudo\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eThen edit the task file (roles/jenkins/tasks/main.yml) for jenkins role:\u003c/p\u003e\r\n\r\n\u003cp\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[roles/jenkins/tasks/main.yml]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-yaml\"\u003e---\r\n- name: Adding apt key for jenkins\r\n  apt_key: url=https://pkg.jenkins.io/debian/jenkins-ci.org.key state=present\r\n  become: yes\r\n  become_method: sudo\r\n\r\n- name: Adding repo address to the source\r\n  apt_repository: repo='deb https://pkg.jenkins.io/debian-stable binary/' state=present\r\n  become: yes\r\n  become_method: sudo\r\n\r\n- name: Installing Jenkins\r\n  apt: name=jenkins state=present\r\n  become: yes\r\n  become_method: sudo\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eAfter all the configuration, just the runt the following command from the console:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-bash\"\u003eansible-playbook playbooks/jenkins_server.yml\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003eIf the above command doesn\u0026#39;t show any errors, then your jenkins server is ready to go. Make sure in your network port 8080 is open becasue Jenkins runs on port 8080 by default. To check whether the Jenkins server is ready or not, from the browser go the following address:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-git\"\u003ehttp://\u0026lt;public-ip-address-of-your-jenkins-server\u0026gt;:8080\u003c/code\u003e\u003c/pre\u003e\r\n","tags":["jenkins","automation","ubuntu"],"image":"ecf6cf76f49f7fc42f8661a00cb11154","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-13T05:06:26.880Z"},"updated_at":{"$date":"2018-05-15T04:49:57.864Z"},"no_of_views":68}
{"_id":{"$oid":"5af9d3f16b709228e9a2675a"},"title":"Creating LAMP Stack using Ansible in Ubuntu","category":["devops","tutorials","ansible","linux"],"short_description":"Creating Lamp stack will never be headache anymore.  Configuration management is there to automate the entire process. Now you can install LAMP stack in any number of servers in few seconds.","external_link":"","external_author":"","description":"\u003cp style=\"text-align:justify\"\u003eInstalling LAMP stack manually in a server required few steps such as updating repository cache, installing apache, mysql and php, configuring apache configuration file. Installing LAMP stack in only one server is not a big deal. But think, you have to install LAMP server in 10 servers. Going through all the same processes in those 10 servers is not only a time consuming issues but also error prone.\u0026nbsp;Luckily configuration management tool like Ansible is there to automate the whole process. With Ansible, you will write the configuration once, and apply those configurations as many time as you want in any number of server. This whole article is all about that. Before, moving further, make sure you have Ansible install in your Linux machine where you will write the configuration as code.\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eFirst provission an ubuntu server from AWS or any other cloud or private server. To create ubuntu server in AWS with Ansible, you \u003ca href=\"/post/get/5af6deb42528c37cd3f9a777\" target=\"_blank\"\u003ecan click\u003c/a\u003e here to read the steps mentioned in my another ariticle. Make sure, you have installed python in target machine. To create a LAMP stack in a dedicated host, first modify the inventory file to mention your targeted machine which has a IP address of 34.200.228.190 for example:\u003c/p\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[/etc/ansible/hosts]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-bash\"\u003e[web_server]\r\n34.200.228.190 ansible_user=ubuntu ansible_become=true ansible_become_method=sudo\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eCreate a playbook(lamp_server.yml) with following lines\u003c/p\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[lamp_server.yml]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-yaml\"\u003e---\r\n- hosts: web_server\r\n  roles:\r\n     - server\r\n     - mysql\r\n     - php\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eThen create three roles with \u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eansible-galaxy\u003c/span\u003e \u003c/strong\u003ecommand:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-bash\"\u003eansible-galaxy init roles/server\r\nansible-galaxy init roles/mysql\r\nansible-galaxy init roles/php\r\n\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eAs soon as you run the above commands, a number of directories and sub-directories will be created under \u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003erole\u003c/strong\u003e\u003c/span\u003e directory. The overall directory structure of the role folder and roles will be look like this\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-bash\"\u003e├── mysql\r\n│   ├── defaults\r\n│   │   └── main.yml\r\n│   ├── files\r\n│   ├── handlers\r\n│   │   └── main.yml\r\n│   ├── meta\r\n│   │   └── main.yml\r\n│   ├── README.md\r\n│   ├── tasks\r\n│   │   └── main.yml\r\n│   ├── templates\r\n│   ├── tests\r\n│   │   ├── inventory\r\n│   │   └── test.yml\r\n│   └── vars\r\n│       └── main.yml\r\n├── php\r\n│   ├── defaults\r\n│   │   └── main.yml\r\n│   ├── files\r\n│   ├── handlers\r\n│   │   └── main.yml\r\n│   ├── meta\r\n│   │   └── main.yml\r\n│   ├── README.md\r\n│   ├── tasks\r\n│   │   └── main.yml\r\n│   ├── templates\r\n│   │   └── index.j2\r\n│   ├── tests\r\n│   │   ├── inventory\r\n│   │   └── test.yml\r\n│   └── vars\r\n│       └── main.yml\r\n├── server\r\n│   ├── defaults\r\n│   │   └── main.yml\r\n│   ├── files\r\n│   ├── handlers\r\n│   │   └── main.yml\r\n│   ├── meta\r\n│   │   └── main.yml\r\n│   ├── README.md\r\n│   ├── tasks\r\n│   │   └── main.yml\r\n│   ├── templates\r\n│   ├── tests\r\n│   │   ├── inventory\r\n│   │   └── test.yml\r\n│   └── vars\r\n│       └── main.yml\r\n\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eEdit the task file (roles/server/tasks/main.yml) for server role:\u003c/p\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[roles/server/tasks/main.yml]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-yaml\"\u003e---\r\n- name: Update apt cache\r\n  apt: update_cache=yes cache_valid_time=3600\r\n\r\n- name: Install required Software\r\n  apt: name={{ item}} state=present\r\n  with_items:\r\n     - apache2\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eThen, edit the task file (roles/mysql/tasks/main.yml) for mysql role:\u003c/p\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[roles/mysql/tasks/main.yml]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-yaml\"\u003e---\r\n# tasks file for roles/mysql\r\n- name: Installing MySQL\r\n  apt: name={{ item }} state=present\r\n  with_items:\r\n     - mysql-server\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eFinally,\u0026nbsp;edit the task file (roles/php/tasks/main.yml) for php role:\u003c/p\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003e\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003e[roles/php/tasks/main.yml]\u003c/strong\u003e\u003c/span\u003e\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-yaml\"\u003e---\r\n- name: Adding PHP7 repo\r\n  apt_repository: repo=ppa:ondrej/php state=present\r\n\r\n- name: Updating apt cache\r\n  apt: update_cache=yes\r\n\r\n- name: Installing PHP\r\n  apt: name={{ item }} state=present\r\n  with_items:\r\n     - php\r\n     - libapache2-mod-php\r\n     - php-mcrypt\r\n     - php-mysql\r\n\r\n- name: Deleting index.html file\r\n  file: path=/var/www/html/index.html state=absent\r\n\r\n- name: Creating index.php file\r\n  template:\r\n     src: index.j2\r\n     dest: /var/www/html/index.php\r\n     mode: '0644'\r\n     owner: root\r\n     group: root\r\n\r\n- name: Restarting Apache2 server\r\n  service: name=apache2 state=restarted\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eAlso make sure, in the templates forlder of php role \u0026nbsp;has a file of \u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003eroles/php/templates/index.j2\u003c/strong\u003e\u003c/span\u003e with the following content:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-php\"\u003e\u0026lt;?php\r\n\r\nphpinfo();\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eAfter all the configuration, just the runt the following command from the console:\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-bash\"\u003eansible-playbook lamp_server.yml\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eIf the above command doesn\u0026#39;t show any errors, then your lamp stack has been successfuylly implemented in your Linux machine.\u0026nbsp;From your favourite web browser, just type the ip address(34.200.228.190, for example) of you Linux server\u0026nbsp; and you will see the following page:\u003cimg alt=\"\" src=\"https://lh3.googleusercontent.com/yoBC-HwBj2n2o9Ywvsr5-dY-5cBTsJH0mMVICknYhWwwCbT5u-cNsWd2fo2Pi2HamDo7H_krKo-SnzKnxdptk8_dwYYuU2GIdphoOjIK2OD0UIXG0scpbsORIJD_KphE3jTUgI66I-CofHy6p6dbf1TOGPjhjkmw-C7lUBz3fmHd4rn7NZB5KfhZZZIRdCg6ZIXz4oxKIcQ8Wcfb-Sv0mFtm4kxyuB0hm-ufq73vg-Qm9XZ8Dzv7dd0UqqRst7-J6ynSUjw4vWAAIEuMsmXKVUWHHbLOMYB6hB6jPiJDPuMCJfGgxsgEZm-zgLP1rp7eRNHK2VSR0SYwj3PdqPz4aY8APOhGYrWMiO5xO2MnlrVxV-8mzrfOA6numtzmW2Ty6sW9gZqW0kfrkQy5g7kYr8u1T26ZYR3TrtTO-kISG7_ZUeAYCpOgMywX24j0hAfVSLOuHzFa4qHpFcSSmMwtMZ-I2a4XHYLEZlRHl31SjXLde9W0FecMtA9arjdS3km7_tKih6YyWfsEI86wwH3b3tWZvENRb1X9azzNb3vbnCs_RZTlR-RcAZ1BL5KhSRi_WjXZxpSc_Vbk2Cxzw7hMG4DKc8Mux2TB4FNx2MU=w943-h827-no\" style=\"height:30%; width:90%\" /\u003e\u003c/p\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\" style=\"text-align:justify\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":["php","mysql","apache","lamp","automation"],"image":"0af30763fb5f13399a46210e50c0085b","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-14T18:22:41.944Z"},"updated_at":{"$date":"2018-05-17T06:57:17.341Z"},"no_of_views":449}
{"_id":{"$oid":"5afa608e6b709228e9a2675b"},"title":"Installing LAMP(Linux, Apache, MySQL) Stack in Ubuntu with PHP7","category":["tutorials","linux"],"short_description":"If you are a professional web developer, at some point you might have to install LAMP in your Linux machine. This tutorial is a guide towards the LAMP Installation. ","external_link":"https://www.digitalocean.com/community/tutorials/how-to-install-linux-apache-mysql-php-lamp-stack-on-ubuntu-16-04","external_author":"Digital Ocean","description":"","tags":["lamp","php","mysql","apache"],"image":"d5d1cf785a5823f2f36547363bdc6e75","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-15T04:22:38.769Z"},"updated_at":{"$date":"2018-05-15T04:22:38.769Z"}}
{"_id":{"$oid":"5afa7e42f139f51c85d050cf"},"title":"How To Test CPU Load Test In Your Linux Machine","category":["troubleshooting","linux"],"short_description":"As a system administrator, you might need to check how the sever might react under heavy traffic.  There is a tool which will help you to virtually increase the load in your server.","external_link":"https://www.tecmint.com/linux-cpu-load-stress-test-with-stress-ng-tool/","external_author":"Aaron Kili","description":"","tags":["cpu utilization","server","system administrator"],"image":"3b00c4dc6424127720cd84310190f42c","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-15T06:29:22.392Z"},"updated_at":{"$date":"2018-05-15T06:29:22.392Z"},"no_of_views":2}
{"_id":{"$oid":"5afbf6806901eb5199b5fe11"},"title":"Understanding Linux File System","category":["linux"],"short_description":"To become an expert in Linux platform, the first thing you need to be really good at - understating its File System. If you are from windows platform, this will be your entry point to the world of Linux Environment.","external_link":"","external_author":"","description":"\u003cp style=\"text-align:justify\"\u003eThe entire Linux file system will look like the following diagram. In windows, we have an icon labelled as \u0026quot;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eMy Compute\u003c/span\u003e\u003c/strong\u003er\u0026quot; which is the entry point to access other drives. Simillary, Linux has an entry point through which you can access other directories and this entry point is know as \u0026quot;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eroot\u003c/span\u003e\u003c/strong\u003e\u0026quot; directory. In other words, as we know Windows operating system might have a number of drives such as C dirve, D drive, E drive and so on;\u0026nbsp;Similary, Linux operating system has one and only one drive and that is called the \u0026quot;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eroot\u003c/span\u003e\u003c/strong\u003e\u0026quot; directory. \u0026quot;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eDirectories\u003c/span\u003e\u003c/strong\u003e\u0026quot; in Linux platform are the containers where we keep our files same as \u0026quot;Folders\u0026quot; in WIndows Platform. Bear in mind one thing, \u0026quot;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eDirectories\u003c/span\u003e\u003c/strong\u003e\u0026quot; is the synonyms of \u0026quot;\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003eFolders\u003c/strong\u003e\u003c/span\u003e\u0026quot; in Linux machine. We will never use the terms \u0026quot;\u003cspan style=\"color:#c0392b\"\u003e\u003cstrong\u003eFolders\u0026quot;\u0026nbsp;\u003c/strong\u003e\u003c/span\u003ein Linux platform. Instead we will call them \u0026quot;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eDirectories\u003c/span\u003e\u003c/strong\u003e\u0026quot;. Also, note that, the symbol forward hash(/) represents the\u0026nbsp;\u0026quot;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eroot\u003c/span\u003e\u003c/strong\u003e\u0026quot; directory.\u003c/p\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003e\u003cimg alt=\"Linux File System\" src=\"https://lh3.googleusercontent.com/gm3z8OwDb4972XsthgIBAIWVmd1sJD81VltaYmVwCt99hIZIw-dQRtoa_ZgP__BcZBwEnUXah0BUbtgM5dSoSGcsuQY5sAwkkX2tOQyVVAHFZDmCTepCBGxKbyQKwLjCYip8UD-fIrhN4PmEYyrR9nAlp8OadWNsPluac25WwiuajWykyDTLJ55oqnwryva1WJVhWs5Jy7-43HyOiIOQP5FKXeIzlWQKm1Pj6B5COtIwkUOrzg79ctxtpwc2ypdUUSrxNqPcqQkxRumyjfpM7dQDmFfh-5CB-UDEJdCvjtQZkQGfUyadgjUkghI3-hCevsoZUSYnRqeA_jUUaG_4HAPtl-HUhKXeT9zNuYwcvsE-DJ2JcbdEb0dXDEk4E6__hOJ3KjhuOe8W2PxR5tZZBkmpU_tRUJJK7R3Jhbg3jgGvqPPX1RwpODfx4x1CogZ4RSlsW0NwZUHltJ3VjPKbj--eywoB-jtzzi8fb8pIHYPwa30oPO8tw-RUS-wmdP_49Jt2Q0gzlfDs5jwAxl7eY5ApCXHs4Ip1-L06uakewlXzzzdrWHYJ5964gx2suA088EXpyNbTallEglyZgfyyWGqy2Lcxf8Of3Quh5Mk=w810-h450-no\" style=\"height:100%; width:90%\" /\u003e\u003c/p\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\" style=\"text-align:justify\"\u003eSo, normally in a Linux machine, under\u0026nbsp;\u0026quot;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eroot\u003c/span\u003e\u003c/strong\u003e\u0026quot; directory(/), you will see the following directories and each directory has a\u0026nbsp;special purpose. Bellow, some of those important\u0026nbsp;directories and their spcial purposes have been illustrated:\u003c/div\u003e\r\n\r\n\u003cdiv\u003e\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-vim\"\u003e/usr: Installed software, shared libraries are normally stored here. Under this directory, you will see other sub-directories such as bin, sbin, local etc\r\n\r\n/etc: Configuration files of different systems are normally stored here.\r\n\r\n/var: Files that dynamically changed can be found here such as log files\r\n\r\n/run: Runtime data for processes started are stored here. The content of this directory are recreated on reboot.\r\n\r\n/home: In this directory, normal users store their personal files.\r\n\r\n/root: This the home directory of the super user (We call it root user as well).\\\r\n\r\n/tmp: A temporary directory for files. Files which are more then 10 days old are deleted from this directory automatically.\r\n\r\n/boot: Files needed to start the boot process are stored here. \r\n\r\n/dev: Contains specific device files which are used by the system to access the hardware.\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp style=\"text-align:justify\"\u003eDid you notice one thing? all the direcotries, I mentioned above start with a forward hash(/) symbol. It simply means, those directories are located under root directory. In Linux environment, the path of any directories are calculated from the\u0026nbsp;\u0026nbsp;\u0026quot;\u003cstrong\u003e\u003cspan style=\"color:#c0392b\"\u003eroot\u003c/span\u003e\u003c/strong\u003e\u0026quot; directory(/). If you absolutely begineer to Linux world, the purposes of Linux directories\u0026nbsp;I have illustrated above might be not so clear. Don\u0026#39;t worry, try to keep yourself involved in Linux environment and you will know all the things as time goes. Bear in mind one thing, apart from the /home directory, only system adminstrators (they are also known as super user or root user) can access other directories such as /root, /dev/, /etc and so on. Normal users will not have permission to access those directories. To access those directories as a normal user, you need to have proper priviliges defined by the system administrators.\u0026nbsp;\u003c/p\u003e\r\n\u003c/div\u003e\r\n","tags":["operating system"],"image":"e5dc01e7dbec046b86bd029ff97fa01b","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-16T09:14:40.676Z"},"updated_at":{"$date":"2018-05-16T23:53:00.266Z"},"no_of_views":47}
{"_id":{"$oid":"5afc20926901eb5199b5fe12"},"title":"Top 10 Technologies To Learn In Near Future","category":["career"],"short_description":"Now a days, lots of students of IT are moving to learn programming languages such as PHP, Java, ASP.NET, Android and so on. But there is a world apart from the programming that needs to be explored. ","external_link":"","external_author":"","description":"\u003cp style=\"text-align:justify\"\u003eNow a days, lots of students of IT are moving to learn programming languages such as PHP, Java, ASP.NET, Android and so on. But there is a world apart from the programming that needs to be explored.\u0026nbsp;I am not discouraging you for programming. Programming should not be ignored if your are a IT graduates. You must have to be good at any of the programming languages such as python or Java or PHP. But apart from that programming language, you need to look around. There are few technologies that will be in high demand soon and if you able to grab any of those technologies, you will be stay ahead in the cat race of keeping yourself learning. Here I highlighted\u0026nbsp;the most wanted technologies the world is waiting for. However, bear in mind, these are not listed in order.\u003c/p\u003e\r\n\r\n\u003cpre\u003e\r\n\u003ccode class=\"language-vim\"\u003eArtificial Intelligence\r\nBlockchain\r\nAR \u0026amp; VR - Virtually Reallity \r\nBig Data\r\nCloud Computing\r\nAngular \u0026amp; React\r\nDevOps\r\nInternet of Things (IoT)\r\nIntelligent Apps(Like Chat box or virtual assistant)\r\nMachine Learning\u003c/code\u003e\u003c/pre\u003e\r\n\r\n\u003cp\u003e\u0026nbsp;\u003c/p\u003e\r\n\r\n\u003cdiv id=\"selenium-highlight\"\u003e\u0026nbsp;\u003c/div\u003e\r\n","tags":["blockchain","cloud computing","machine learning","angular js","react js","big data","artificial intelligence"],"image":"c90fc85300438fb7659fc6bf9634d4c6","created_by":"Aseef Ahmed","created_at":{"$date":"2018-05-16T12:14:10.042Z"},"updated_at":{"$date":"2018-05-16T12:23:34.332Z"},"no_of_views":348}
